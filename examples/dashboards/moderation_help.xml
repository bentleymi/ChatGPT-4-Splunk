<form version="1.1" theme="dark">
  <label>Moderation Help</label>
  <search id="main">
    <query>| openai prompt=$string$ task="moderate"</query>
  </search>
  <fieldset submitButton="false">
    <input type="text" searchWhenChanged="true" token="string" depends="$depends$">
      <label>String to Moderate</label>
      <prefix>"</prefix>
      <suffix>"</suffix>
    </input>
    <input type="text" token="avgThreshold" searchWhenChanged="true" depends="$depends$">
      <label>Average Threshold</label>
      <default>50</default>
      <initialValue>50</initialValue>
    </input>
    <input type="text" token="maxThreshold" searchWhenChanged="true" depends="$depends$">
      <label>Max Threshold</label>
      <default>75</default>
      <initialValue>75</initialValue>
    </input>
    <input type="radio" token="depends" depends="$never$">
      <label></label>
      <choice value="1">Show Input Fields</choice>
      <choice value="0">Hide Input Fields</choice>
      <change>
        <condition match="'value'==&quot;1&quot;">
          <set token="depends">true</set>
        </condition>
        <condition match="'value'==&quot;0&quot;">
          <unset token="depends"></unset>
        </condition>
      </change>
      <default>0</default>
      <initialValue>0</initialValue>
    </input>
  </fieldset>
  <row>
    <panel>
      <html>
        <center>
          <font size="20pt">Prompt: $string$</font>
        </center>
        <style>
          #my_trellis .viz-panel .facet-label { font-size: 20px !important; }
          #my_trellis .facets-container { margin: 2%; !important; }
          #my_trellis .viz-facet { width: 13% !important; }
        </style>
      </html>
      <single id="my_trellis">
        <search base="main">
          <query>| spath input=openai_response path=results{}.category_scores output=scores
| spath input=scores
| fields - openai* scores
| foreach * [ eval &lt;&lt;FIELD&gt;&gt; = if(isnull(floor(&lt;&lt;FIELD&gt;&gt; * 100)),0,floor(&lt;&lt;FIELD&gt;&gt; * 100))]</query>
        </search>
        <option name="colorMode">block</option>
        <option name="drilldown">none</option>
        <option name="height">287</option>
        <option name="numberPrecision">0.0000</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.size">medium</option>
        <option name="trellis.splitBy">_aggregation</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <single id="yesno">
        <search base="main">
          <query>| spath input=openai_response path=results{}.category_scores output=scores
| spath input=scores
| fields - openai* scores
| transpose column_name=measurement | rename "row 1" as value
| stats avg(value) as avg max(value) as max by measurement
| foreach avg max [ eval &lt;&lt;FIELD&gt;&gt; = if(isnull(floor(&lt;&lt;FIELD&gt;&gt; * 100)),0,floor(&lt;&lt;FIELD&gt;&gt; * 100))]
| eval status=if(avg&gt;tonumber($avgThreshold$) OR max&gt;tonumber($maxThreshold$),upper(measurement),null())
| stats values(status) as status
| mvcombine status
| eval status=if(isnull(status),"No Moderation Needed","Appears to contain the following: ".status)
| fields status</query>
        </search>
        <option name="drilldown">none</option>
        <option name="height">166</option>
        <option name="rangeColors">["0x53a051","0x0877a6","0xf8be34","0xf1813f","0xdc4e41"]</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
</form>
